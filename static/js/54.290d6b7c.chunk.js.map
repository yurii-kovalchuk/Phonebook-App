{"version":3,"file":"static/js/54.290d6b7c.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","redux/modal/selectors.js","components/UpdatingForm/UpdatingForm.styled.js","components/UpdatingForm/UpdatingForm.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/Contact/Contact.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","pages/Phonebook/Phonebook.styled.js","pages/Phonebook/Phonebook.js"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 50%;\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n\n  &:hover,\n  :focus {\n    border-color: #00bfff;\n  }\n\n  // margin-top: 10px;\n  // width: 200px;\n  // &:focus-visible {\n  //   outline-color: blue;\n  // }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { changeValue } from 'redux/filter/slice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const updateFilter = e => {\n    dispatch(changeValue(e.target.value));\n  };\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input value={filter} onChange={updateFilter} />\n      </Label>\n    </div>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { RiAddCircleFill } from 'react-icons/ri';\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  margin-bottom: 50px;\n  padding: 30px 10px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n`;\n\nexport const LabelsWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 50%;\n  margin: 0 10px 30px;\n  font-weight: 500;\n  text-align: start;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n\n  &:hover,\n  :focus {\n    border-color: #00bfff;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  width: 160px;\n  margin: 0 auto;\n  padding: 10px;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-size: 16px;\n\n  text-decoration: none;\n  text-align: center;\n\n  color: #00bfff;\n  background-color: #f8f8ff;\n\n  border: 1px solid #00bfff;\n  border-radius: 5px;\n\n  &:hover,\n  :focus {\n    background-color: #188ce8;\n    color: #f0ffff;\n    border-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const BtnIcon = styled(RiAddCircleFill)`\n  // margin-left: 10px;\n`;\n","import { Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  FormWrapper,\n  Label,\n  Input,\n  Btn,\n  LabelsWrap,\n  BtnIcon,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const addContacts = (name, number) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`Contact is already in list`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n  };\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    addContacts(name, number);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <FormWrapper>\n        <LabelsWrap>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n        </LabelsWrap>\n        <Btn type=\"submit\">\n          <span>Add contact </span>\n          <BtnIcon size={20} />\n        </Btn>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #F5F5F5;\n  border-radius: 5px;\n\n  background-color: white;\n  &: focus, :hover {\n    background-color: #F5F5F5;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Letters = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  margin-right: 20px;\n  padding: 5px;\n\n  background-color: #00bfff;\n  color: #f0ffff;\n\n  font-size: 20px;\n  font-weight: 600;\n  text-shadow: #1e90ff 1px 1px 1px;\n\n  border-radius: 50%;\n  border: 1px solid #1e90ff;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 5px 0;\n  font-size: 18px;\n`;\n\nexport const Phone = styled.a`\n  margin: 0;\n  text-decoration: none;\n  font-size: 14px;\n  color: gray;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n  margin-left: 10px;\n  padding: 5px;\n  width: 24px;\n  height: 24px;\n  border: transparent;\n  border-radius: 4px;\n  background-color: grey;\n  color: #f0ffff;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    background-color: crimson;\n  }\n\n  &:active {\n    background-color: #b22222;\n  }\n`;\n\nexport const EditBtn = styled.button`\n  display: block;\n  padding: 5px;\n  width: 24px;\n  height: 24px;\n  border: transparent;\n  border-radius: 4px;\n  background-color: grey;\n  color: #f0ffff;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    background-color: green;\n  }\n\n  &:active {\n    background-color: #006400;\n  }\n`;\n","export const selectIsModalOpen = state => state.modal.isOpen;\nexport const selectModalIdx = state => state.modal.idx;\n","import styled from 'styled-components';\nimport { FiEdit } from 'react-icons/fi';\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  margin-bottom: 50px;\n  padding: 30px;\n  text-align: center;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n`;\n\nexport const LabelsWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 50%;\n  margin: 0 10px 30px;\n  font-weight: 500;\n  text-align: start;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n\n  &:hover,\n  :focus {\n    border-color: #00bfff;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  width: 160px;\n  margin: 0 auto;\n  padding: 10px;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-size: 16px;\n\n  text-decoration: none;\n  text-align: center;\n\n  color: #f8f8ff;\n  background-color: #00bfff;\n\n  border: 1px solid #00bfff;\n  border-radius: 5px;\n\n  &:hover,\n  :focus {\n    background-color: #188ce8;\n    border-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const BtnIcon = styled(FiEdit)`\n  // margin-left: 10px;\n`;\n\nexport const BtnsWrap = styled.div`\n  display: flex;\n`;\n\nexport const BtnCancel = styled(Btn)`\n  color: #00bfff;\n  background-color: #f8f8ff;\n\n  &:hover,\n  :focus {\n    color: #f0ffff;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { updateContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectModalIdx } from 'redux/modal/selectors';\nimport { closeModal } from 'redux/modal/slice';\nimport {\n  FormWrapper,\n  Label,\n  Input,\n  Btn,\n  LabelsWrap,\n  BtnIcon,\n  BtnsWrap,\n  BtnCancel,\n} from './UpdatingForm.styled';\n\nexport const UpdatingForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const id = useSelector(selectModalIdx);\n  const currentContact = contacts.find(contact => contact.id === id);\n\n  const initialValues = {\n    name: currentContact.name,\n    number: currentContact.number,\n  };\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    if (name === initialValues.name && number === initialValues.number) {\n      toast.error('Please change contact information and try again', {\n        autoClose: 2000,\n      });\n      return;\n    } else if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`Contact is already in list`);\n      return;\n    }\n\n    dispatch(updateContact([id, { name, number }]));\n    resetForm();\n    dispatch(closeModal());\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <FormWrapper>\n        <LabelsWrap>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n        </LabelsWrap>\n        <BtnsWrap>\n          <Btn type=\"submit\">\n            <span>Edit contact </span>\n            <BtnIcon size={20} />\n          </Btn>\n          <BtnCancel\n            type=\"button\"\n            onClick={() => {\n              dispatch(closeModal());\n            }}\n          >\n            <span>Cancel </span>\n          </BtnCancel>\n        </BtnsWrap>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { UpdatingForm } from 'components/UpdatingForm/UpdatingForm';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from 'redux/modal/slice';\nimport { ModalContent, Overlay } from './Modal.styled';\n\nexport const Modal = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', onKeydown);\n      document.body.style.overflow = 'unset';\n    };\n  });\n\n  const onKeydown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal());\n    }\n  };\n\n  const onOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      dispatch(closeModal());\n    }\n  };\n\n  return (\n    <Overlay onClick={onOverlayClick}>\n      <ModalContent>\n        <UpdatingForm />\n      </ModalContent>\n    </Overlay>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { MdDelete } from 'react-icons/md';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport {\n  Item,\n  NameWrapper,\n  BtnWrapper,\n  Letters,\n  Text,\n  Phone,\n  DeleteBtn,\n  EditBtn,\n} from './Contact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from 'redux/modal/slice';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { selectIsModalOpen } from 'redux/modal/selectors';\n\nexport const Contact = ({ info: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const isModal = useSelector(selectIsModalOpen);\n\n  return (\n    <>\n      <Item>\n        <NameWrapper>\n          <Letters>\n            {name\n              .split(' ')\n              .map(item => item.slice(0, 1))\n              .join('')\n              .toUpperCase()}\n          </Letters>\n          <div>\n            <Text>{name}</Text>\n            <Phone href={`tel: &{number}`}>\n              <BsTelephoneFill size={12} /> {number}\n            </Phone>\n          </div>\n        </NameWrapper>\n        <BtnWrapper>\n          <EditBtn\n            type=\"button\"\n            title=\"Edit\"\n            onClick={() => {\n              dispatch(openModal(id));\n            }}\n          >\n            <FiEdit2 size={14} />\n          </EditBtn>\n          <DeleteBtn\n            type=\"button\"\n            title=\"Delete\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            <MdDelete size={14} />\n          </DeleteBtn>\n        </BtnWrapper>\n      </Item>\n      {isModal && <Modal />}\n    </>\n  );\n};\n\nContact.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  // background-color: white;\n`;\n","import PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Contact key={contact.id} info={contact} />\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const PhonebookWrap = styled.div`\n  margin: 0 auto;\n  padding: 50px 10px;\n  max-width: 720px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { PhonebookWrap } from './Phonebook.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/filter/selectors';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const vivsibleContacts = filteredContacts();\n\n  return (\n    <PhonebookWrap>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length === 0 ? <p>Your contacts will be here...</p> : null}\n      {vivsibleContacts.length === 0 && contacts.length !== 0 ? (\n        <p>Sorry! There are no contacts with this name</p>\n      ) : (\n        <ContactsList contacts={vivsibleContacts} />\n      )}\n    </PhonebookWrap>\n  );\n};\n\nexport default Phonebook;\n"],"names":["selectFilter","state","filter","Label","styled","Input","Filter","dispatch","useDispatch","useSelector","value","onChange","e","changeValue","target","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","FormWrapper","Form","LabelsWrap","Field","Btn","BtnIcon","RiAddCircleFill","ContactForm","initialValues","name","number","onSubmit","resetForm","find","contact","toLowerCase","toast","addContact","addContacts","type","pattern","title","required","size","Item","NameWrapper","BtnWrapper","Letters","Text","Phone","DeleteBtn","EditBtn","selectIsModalOpen","modal","isOpen","selectModalIdx","idx","FiEdit","BtnsWrap","BtnCancel","UpdatingForm","id","currentContact","updateContact","closeModal","autoClose","onClick","Overlay","ModalContent","Modal","useEffect","window","addEventListener","onKeydown","document","body","style","overflow","removeEventListener","code","currentTarget","Contact","info","isModal","split","map","item","slice","join","toUpperCase","href","openModal","deleteContact","List","ContactsList","PhonebookWrap","fetchContacts","vivsibleContacts","normalizeFilter","includes","filteredContacts","length"],"sourceRoot":""}