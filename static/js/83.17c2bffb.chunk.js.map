{"version":3,"file":"static/js/83.17c2bffb.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","pages/Phonebook/Phonebook.styled.js","redux/contacts/selectors.js","redux/filter/selectors.js","pages/Phonebook/Phonebook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 50%;\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n\n  &:hover,\n  :focus {\n    border-color: #00bfff;\n  }\n\n  // margin-top: 10px;\n  // width: 200px;\n  // &:focus-visible {\n  //   outline-color: blue;\n  // }\n`;\n","import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input value={value} onChange={onChange} />\n      </Label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { RiAddCircleFill } from 'react-icons/ri';\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  margin-bottom: 50px;\n  padding: 30px 10px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n`;\n\nexport const LabelsWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 50%;\n  margin: 0 10px 30px;\n  font-weight: 500;\n  text-align: start;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  box-sizing: border-box;\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n\n  &:hover,\n  :focus {\n    border-color: #00bfff;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  width: 160px;\n  margin: 0 auto;\n  padding: 10px;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-size: 16px;\n\n  text-decoration: none;\n  text-align: center;\n\n  color: #00bfff;\n  background-color: #f8f8ff;\n\n  border: 1px solid #00bfff;\n  border-radius: 5px;\n\n  &:hover,\n  :focus {\n    background-color: #188ce8;\n    color: #f0ffff;\n    border-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const BtnIcon = styled(RiAddCircleFill)`\n  // margin-left: 10px;\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  FormWrapper,\n  Label,\n  Input,\n  Btn,\n  LabelsWrap,\n  BtnIcon,\n} from './ContactForm.styled';\n\nexport const ContactForm = ({ addContacts }) => {\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    addContacts(name, number);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <FormWrapper>\n        <LabelsWrap>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n        </LabelsWrap>\n        <Btn type=\"submit\">\n          <span>Add contact </span>\n          <BtnIcon size={20} />\n        </Btn>\n      </FormWrapper>\n    </Formik>\n  );\n};\n\nContactForm.proprTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #F5F5F5;\n  border-radius: 5px;\n\n  background-color: white;\n  &: focus, :hover {\n    background-color: #F5F5F5;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Letters = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  margin-right: 20px;\n  padding: 5px;\n\n  background-color: #00bfff;\n  color: #f0ffff;\n\n  font-size: 20px;\n  font-weight: 600;\n  text-shadow: #1e90ff 1px 1px 1px;\n\n  border-radius: 50%;\n  border: 1px solid #1e90ff;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 5px 0;\n  font-size: 18px;\n`;\n\nexport const Phone = styled.a`\n  margin: 0;\n  text-decoration: none;\n  font-size: 14px;\n  color: gray;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n  margin-left: 20px;\n  padding: 5px;\n  width: 24px;\n  height: 24px;\n  border: transparent;\n  border-radius: 4px;\n  background-color: grey;\n  color: #f0ffff;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    background-color: crimson;\n  }\n\n  &:active {\n    background-color: #b22222;\n  }\n\n  // &:hover,\n  // :focus {\n  //   background-color: #b22222;\n  // }\n\n  // &:active {\n  //   background-color: darkred;\n  // }\n`;\n","import PropTypes from 'prop-types';\nimport { MdDelete } from 'react-icons/md';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport {\n  Item,\n  NameWrapper,\n  Letters,\n  Text,\n  Phone,\n  DeleteBtn,\n} from './Contact.styled';\n\nexport const Contact = ({ info: { id, name, number }, onDelete }) => {\n  return (\n    <Item>\n      <NameWrapper>\n        <Letters>\n          {name\n            .split(' ')\n            .map(item => item.slice(0, 1))\n            .join('')\n            .toUpperCase()}\n        </Letters>\n        <div>\n          <Text>{name}</Text>\n          <Phone href={`tel: &{number}`}>\n            <BsTelephoneFill size={12} /> {number}\n          </Phone>\n        </div>\n      </NameWrapper>\n      <DeleteBtn\n        type=\"button\"\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        <MdDelete size={14} />\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  // background-color: white;\n`;\n","import PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Contact key={contact.id} info={contact} onDelete={onDelete} />\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const PhonebookWrap = styled.div`\n  margin: 0 auto;\n  padding: 50px 10px;\n  max-width: 720px;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { changeValue } from '../../redux/filter/slice';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { PhonebookWrap } from './Phonebook.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport {\n  addContact,\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContacts = (name, number) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`Contact is already in list`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n  };\n\n  const deleteContacts = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const updateFilter = e => {\n    dispatch(changeValue(e.target.value));\n  };\n\n  const filteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const vivsibleContacts = filteredContacts();\n\n  return (\n    <PhonebookWrap>\n      <ContactForm addContacts={addContacts} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={updateFilter} />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactsList contacts={vivsibleContacts} onDelete={deleteContacts} />\n    </PhonebookWrap>\n  );\n};\n\nexport default Phonebook;\n"],"names":["Label","styled","Input","Filter","value","onChange","FormWrapper","Form","LabelsWrap","Field","Btn","BtnIcon","RiAddCircleFill","ContactForm","addContacts","initialValues","name","number","onSubmit","resetForm","type","pattern","title","required","size","proprTypes","addContact","PropTypes","Item","NameWrapper","Letters","Text","Phone","DeleteBtn","Contact","info","id","onDelete","split","map","item","slice","join","toUpperCase","href","onClick","List","ContactsList","contacts","contact","PhonebookWrap","selectContacts","state","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","useEffect","fetchContacts","vivsibleContacts","normalizeFilter","toLowerCase","includes","filteredContacts","find","toast","e","changeValue","target","deleteContact"],"sourceRoot":""}